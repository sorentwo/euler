defmodule EulerTwo do
  @doc """
  Each new term in the Fibonacci sequence is generated by adding the previous
  two terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed
  four million, find the sum of the even-valued terms.
  """
  def solve(l // 4_000_000) do
    Stream.iterate(0, &1+1)
      |> Stream.map(EulerTwo.fib(&1))
      |> Enum.take_while(&1 < l)
      |> Enum.filter(fn(x) -> rem(x, 2) == 0 end)
      |> Enum.reduce(0, &1 + &2)
  end

  def fib(0), do: 0
  def fib(1), do: 1
  def fib(n), do: fib(n-1) + fib(n-2)
end
