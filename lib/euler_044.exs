defmodule EulerFortyFour do
  @moduledoc """
  Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
  pentagonal numbers are:

  1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

  It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
  70 − 22 = 48, is not pentagonal.

  Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
  difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of
  D?
  """
  def solve do
    pentagonals = 1..3000 |> Enum.map(&pentagonal/1)

    for j <- pentagonals, k <- pentagonals,
      k > j,
      pentagonal?(j + k),
      pentagonal?(k - j),
      do: abs(k - j)
  end

  defp pentagonal(n), do: trunc(n * ((3 * n) - 1) / 2)

  defp pentagonal?(n) do
    sqr = ((:math.sqrt(24*n+1)) + 1) / 6
    sqr == trunc(sqr)
  end
end

IO.puts inspect(EulerFortyFour.solve)
